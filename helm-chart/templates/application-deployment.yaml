apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.name }}"
  namespace: "{{ .Values.namespace }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.label }}"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      name: "{{ .Values.podname }}"
      namespace: "{{ .Values.namespace }}"
      labels:
        app: "{{ .Values.label }}"
    spec:
      {{ if .Values.tolerations  }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{ end }}
      {{ if .Values.affinity  }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{ end }}
      containers:
      - name: "{{ .Values.containerName }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        env:
          - name: DB_HOST
            value: "{{ .Values.releaseName }}-sql-db-host@azurekeyvault"
          - name: DB_USER
            value: "{{ .Values.releaseName }}-sql-db-user@azurekeyvault"
          - name: DB_PASSWORD
            value: "{{ .Values.releaseName }}-sql-db-password@azurekeyvault"
          - name: DB_NAME
            value: "{{ .Values.releaseName }}-sql-db-name@azurekeyvault"
          - name: SHARED_COUNT_KEY
            value: "{{ .Values.releaseName }}-shared-count-key@azurekeyvault"
          - name: HRX_SEARCH_BASE_URL
            value: "{{ .Values.APP.HRX_SEARCH_BASE_URL }}"
          - name: APP_ENV
            value: "{{ .Values.APP.APP_ENV }}"
          - name: NODE_ENV
            value: "{{ .Values.APP.NODE_ENV }}"
          - name: APM_SERVER
            value: "{{ .Values.APP.APM_SERVER }}"
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        ports:
        - containerPort: {{ .Values.containerPort }}
        livenessProbe:
          httpGet:
            path: "/v1/health"
            port: {{ .Values.port }}
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 30
          initialDelaySeconds: 31
        readinessProbe:
          httpGet:
            path: "/v1/health"
            port: {{ .Values.port }}
          failureThreshold: 3
          timeoutSeconds: 1
          periodSeconds: 30
          initialDelaySeconds: 30
{{if .Values.hpa.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
    name: "{{ .Values.name }}-autoscaler"
    namespace: "{{ .Values.namespace }}"
spec:
    maxReplicas: {{.Values.hpa.maxReplicas}}
    minReplicas : {{.Values.hpa.minReplicas}}
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: "{{ .Values.name }}"
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{.Values.hpa.cpu}}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{.Values.hpa.memory}}
{{ end }}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "{{ .Values.appName }}-pdb"
  namespace: "{{ .Values.namespace }}"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: "{{.Values.appName}}"